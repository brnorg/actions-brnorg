name: Remove Tag

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to remove'
        required: true
        default: 'tag-YYYYMMDDHHMMSS'  # Substitua com a tag padrÃ£o ou deixe em branco

jobs:
  remove:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get release ID from tag
        id: get_release_id
        run: |
          # Set the GitHub API URL and headers
          api_url="https://api.github.com/repos/${{ github.repository }}/releases"
          token="${{ secrets.GITHUB_TOKEN }}"
          
          # Get the release information associated with the tag
          response=$(curl -s -H "Authorization: token $token" -H "Accept: application/vnd.github.v3+json" "$api_url")
          
          # Extract the release ID from the response
          release_id=$(echo "$response" | jq -r --arg tag "${{ github.event.inputs.tag }}" '.[] | select(.tag_name == $tag) | .id')
          
          if [ -z "$release_id" ]; then
            echo "Release with tag '${{ github.event.inputs.tag }}' not found."
            exit 1
          else
            echo "Release ID: $release_id"
            echo "RELEASE_ID=$release_id" >> $GITHUB_ENV
          fi

      - name: Delete the release
        run: |
          # Set the GitHub API URL and headers
          api_url="https://api.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }}"
          token="${{ secrets.GITHUB_TOKEN }}"
          
          # Delete the release
          response=$(curl -s -o /dev/null -w "%{http_code}" -X DELETE -H "Authorization: token $token" -H "Accept: application/vnd.github.v3+json" "$api_url")
          
          if [ "$response" -eq 204 ]; then
            echo "Release successfully deleted."
          else
            echo "Failed to delete the release. HTTP status code: $response"
            exit 1
          fi


      - name: Remove tag
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git fetch --tags
          git tag
          git tag -d "${{ github.event.inputs.tag }}"
          git push origin --delete "${{ github.event.inputs.tag }}"
        # env:
        #   GITHUB_TOKEN: ${{ secrets.TOKEN_GLOBAL }}
