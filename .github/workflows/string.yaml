name: tranformacao de string

on:
  push:
    branches:
      - main
  # workflow_dispatch:
  #   inputs:
  #     name:
  #       description: 'nome'
  #       required: false
  #       type: choice
  #       options:
  #         - dr
  #         - prod
  #         - cer
  #         - "[dr, prod]"
  #       default: dr 

jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
     - run: echo ${{ toJSON('bruno:brn,teste:123') }}
     - run: echo ${{ fromJSON(include:[{}]) }}
  # job1:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     matrix: ${{ steps.set-matrix.outputs.matrix }}
  #   steps:
  #     - id: set-matrix
  #       run: |
  #         ambiente="s1,s2"
                  
  #         # Lendo a variável de ambiente
  #         variavel=$ambiente
          
  #         # Separando os valores da variável por vírgula
  #         IFS=',' read -ra valores <<< "$variavel"
          
  #         # Inicializando o JSON
  #         json="{\"include\": ["
          
  #         # Loop sobre os valores
  #         for valor in "${valores[@]}"; do
  #             # Adicionando cada valor ao JSON
  #             json="$json\n  {\"value\": \"$valor\"},"
  #         done
          
  #         # Removendo a última vírgula
  #         json=$(echo "$json" | sed '$ s/,$//')
          
  #         # Finalizando o JSON
  #         json="$json\n]}"
          
  #         # echo "matrix=$json" >> $GITHUB_OUTPUT
  #         echo matrix={\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]} >> $GITHUB_OUTPUT 

        
  # job2:
  #   needs: job1
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix: ${{ fromJSON(needs.job1.outputs.matrix) }}
  #   steps:
  #     - run: echo "ola"
            
